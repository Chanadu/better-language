// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokentype

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Base-0]
	_ = x[OpeningParentheses-1]
	_ = x[ClosingParentheses-2]
	_ = x[OpeningCurlyBrace-3]
	_ = x[ClosingCurlyBrace-4]
	_ = x[Comma-5]
	_ = x[Dot-6]
	_ = x[Semicolon-7]
	_ = x[Minus-8]
	_ = x[Plus-9]
	_ = x[Star-10]
	_ = x[Percent-11]
	_ = x[Slash-12]
	_ = x[Not-13]
	_ = x[NotEqual-14]
	_ = x[Equal-15]
	_ = x[EqualEqual-16]
	_ = x[Greater-17]
	_ = x[GreaterEqual-18]
	_ = x[Less-19]
	_ = x[LessEqual-20]
	_ = x[Identifier-21]
	_ = x[String-22]
	_ = x[Integer-23]
	_ = x[Double-24]
	_ = x[Or-25]
	_ = x[And-26]
	_ = x[False-27]
	_ = x[True-28]
	_ = x[If-29]
	_ = x[Else-30]
	_ = x[For-31]
	_ = x[While-32]
	_ = x[Break-33]
	_ = x[Return-34]
	_ = x[Function-35]
	_ = x[Print-36]
	_ = x[Var-37]
	_ = x[Null-38]
	_ = x[EndOfFile-39]
}

const _TokenType_name = "BaseOpeningParenthesesClosingParenthesesOpeningCurlyBraceClosingCurlyBraceCommaDotSemicolonMinusPlusStarPercentSlashNotNotEqualEqualEqualEqualGreaterGreaterEqualLessLessEqualIdentifierStringIntegerDoubleOrAndFalseTrueIfElseForWhileBreakReturnFunctionPrintVarNullEndOfFile"

var _TokenType_index = [...]uint16{0, 4, 22, 40, 57, 74, 79, 82, 91, 96, 100, 104, 111, 116, 119, 127, 132, 142, 149, 161, 165, 174, 184, 190, 197, 203, 205, 208, 213, 217, 219, 223, 226, 231, 236, 242, 250, 255, 258, 262, 271}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
